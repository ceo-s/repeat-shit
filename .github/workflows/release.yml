name: ReleaseApp
on:
  push:
    branches: [master]
jobs:
  build_linux:
    name: Build for linux
    runs-on: ubuntu-latest

    steps:
      - name: checkout repo content
        uses: actions/checkout@v4

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: install packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: add execution permissions to script
        run: chmod +x build_linux.sh

      - name: build project
        run: ./build_linux.sh

      - name: upload build
        uses: actions/upload-artifact@master
        with:
          name: linux-build
          path: linux-build.tar.gz

  build_windows:
    name: Build for windows
    runs-on: windows-latest

    steps:
      - name: checkout repo content
        uses: actions/checkout@v4

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: install dependencies
        run: pip install -r requirements.txt

      - name: install NSIS
        run: choco install nsis

      - name: build executable with pyinstaller
        run: |
          pyinstaller --distpath dist/windows --add-data="assets;assets" -F --icon=logo.ico main.py

      - name: create installer with NSIS
        run: |
          makensis installer_script.nsi

      - name: upload build
        uses: actions/upload-artifact@master
        with:
          name: windows-installer
          path: windows-installer.exe

  build_macos:
    name: Build for macos
    runs-on: macos-latest

    steps:
      - name: checkout repo content
        uses: actions/checkout@v4

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: install packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: build x86_64 executable
        run: |
          pyinstaller --distpath dist/macos-x86_64 --add-data="assets:assets" -F --target-arch x86_64 main.py

      - name: build arm64 executable
        run: |
          pyinstaller --distpath dist/macos-arm64 --add-data="assets:assets" -F --target-arch arm64 main.py

      - name: merge executables
        run: |
          lipo -create -output dist/macos/RepeatShit dist/macos-x86_64/main dist/macos-arm64/main

      - name: package as .dmg with icon
        run: |
          create-dmg --volname "RepeatShit" --icon "logo.icns" --window-size 500 300 macos-installer.dmg dist/macos/

      - name: upload build
        uses: actions/upload-artifact@master
        with:
          name: macos-installer
          path: macos-installer.dmg

  release:
    name: Release project
    runs-on: ubuntu-latest
    needs:
      - build_linux
      - build_windows
      - build_macos

    steps:
      - name: checkout repo content
        uses: actions/checkout@v4

      - name: download linux-build
        uses: actions/download-artifact@master
        with:
          name: linux-build
          path: ./

      - name: download windows-build
        uses: actions/download-artifact@master
        with:
          name: windows-installer
          path: ./

      - name: download macos-build
        uses: actions/download-artifact@master
        with:
          name: macos-installer
          path: ./

      - name: create release
        run: gh release create v.0.1.${{ github.run_number }} linux-build.tar.gz windows-installer.exe macos-installer.dmg --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
